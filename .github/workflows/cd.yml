name: CD

on:
  push:
    branches:
      - "master"
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  create-virtualenv:
    runs-on: ubuntu-latest
    steps:
      - name: source code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4

      - name: virtualenv cache
        uses: syphar/restore-virtualenv@v1.2
        id: cache-virtualenv
        with:
          custom_cache_key_element: v1.2

      - name: pip cache
        uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'

      - name: Install Python dependencies
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        env:
          POETRY_VERSION: 1.6.1
        run: |
          pip install pip==23.2.1 setuptools==68.2.2
          curl -sSL https://install.python-poetry.org | python3 -
          export VENV="$(poetry env info -p)"
          source ${VENV}/bin/activate
          poetry install --no-interaction

      - name: Log currently installed packages and versions
        run: pip list

  release:
    needs: create-virtualenv
    runs-on: ubuntu-latest
    steps:
      - name: source code
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/checkout@v3

      - name: Set up Python
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/setup-python@v4

      - name: Release to PyPI
        if: startsWith(github.ref, 'refs/tags/')
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          POETRY_VERSION: 1.6.1
        run: |
          pip install pip==23.2.1 setuptools==68.2.2
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry build
          poetry config pypi-token.pypi $PYPI_TOKEN
          poetry publish
